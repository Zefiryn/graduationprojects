<?php

class Application_Model_DbTable_Diplomas extends Zefir_Application_Model_DbTable
{

	/**
	 * Name of the table without prefix
	 * @var string
	 */
    protected $_raw_name = 'diplomas';
    
     /**
     * Name of the table generated by the constructor
     * @var string
     */
    protected $_name = '';
    
    /**
	 * Primary key of the table
	 * @var string
	 */
    protected $_primary = 'diploma_id';


    /**
     * An array of child tables information
     * @var array
     */
     protected $_belongsTo = array(
    
    	'edition' => array(
    		'model' => 'Application_Model_Editions',
    		'column' => 'edition_id',
			'refColumn' => 'edition_id'
       	),

       	'degree' => array(
       		'model' => 'Application_Model_Degrees',
			'column' => 'degree_id',
			'refColumn' => 'degree_id'
		),
		
		'work_type' => array(
       		'model' => 'Application_Model_WorkTypes',
			'column' => 'work_type_id',
			'refColumn' => 'work_type_id'
		)
    );
	
	/**
	 * An array of parent table information
	 * @var array
	 */
	protected $_hasMany = array(
		'files' => array(
			'model' => 'Application_Model_DiplomaFiles',
			'refColumn' => 'diploma_id',
		),
		
		'fields' => array(
			'model' => 'Application_Model_DiplomaFields',
			'refColumn' => 'diploma_id',
		),
	);
	
	/**
	 * constructor
	 * @access public
	 * @param array $config
	 * @return void
	 */
    public function __construct($config = array())
    {
      parent::__construct(array());
    }
    
    public function getAdjacentDiplomas($diploma)
    {
    	$select = $this->select()
    					->union(
    						array(
    							'('.$this->select()->where('edition_id = ?', $diploma->edition_id)->where('surname < ?', $diploma->surname)->order(array('surname DESC', 'name DESC'))->limit(1).')',
    							'('.$this->select()->where('edition_id = ?', $diploma->edition_id)->where('surname > ?', $diploma->surname)->order(array('surname ASC', 'name ASC'))->limit(1).')',
    						)
    					);
    	$rowset = $this->fetchAll($select);
    	
    	$adjacentDiplomas = array();
    	foreach($rowset as $row)
    	{
    		$diplomaClass = get_class($diploma);
    		$adjacentDiploma = new $diplomaClass;
    		$adjacentDiplomas[] =  $adjacentDiploma->populate($row);
    	}
    	
    	return $adjacentDiplomas;
    					
    }
    
}

