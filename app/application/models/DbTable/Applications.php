<?php

class Application_Model_DbTable_Applications extends Zefir_Application_Model_DbTable
{

	/**
	 * Name of the table without prefix
	 * @var string
	 */
    protected $_raw_name = 'applications';
    
     /**
     * Name of the table generated by the constructor
     * @var string
     */
    protected $_name = '';
    
    /**
	 * Primary key of the table
	 * @var string
	 */
    protected $_primary = 'application_id';


    /**
     * An array of child tables information
     * @var array
     */
    protected $_referenceMap = array(
		'Editions' => array(
    		'objProperty' => '_edition',
			'columns' => array('edition_id'),
			'refTableClass' => 'Application_Model_DbTable_Editions',
			'refColumns' => array('edition_id'),
			'onDelete' => self::CASCADE,
			'onUpdate' => self::RESTRICT
		),
		'Users' => array(
    		'objProperty' => '_user',
			'columns' => array('user_id'),
			'refTableClass' => 'Application_Model_DbTable_Users',
			'refColumns' => array('user_id'),
			'onDelete' => self::CASCADE,
			'onUpdate' => self::RESTRICT
		),
		'Schools' => array(
    		'objProperty' => '_school',
			'columns' => array('school_id'),
			'refTableClass' => 'Application_Model_DbTable_Schools',
			'refColumns' => array('school_id'),
			'onDelete' => self::CASCADE,
			'onUpdate' => self::RESTRICT
		),
		'Degrees' => array(
    		'objProperty' => '_degree',
			'columns' => array('degree_id'),
			'refTableClass' => 'Application_Model_DbTable_Degrees',
			'refColumns' => array('degree_id'),
			'onDelete' => self::CASCADE,
			'onUpdate' => self::RESTRICT
		),
		'WorkTypes' => array(
    		'objProperty' => '_work_type',
			'columns' => array('work_type_id'),
			'refTableClass' => 'Application_Model_DbTable_WorkTypes',
			'refColumns' => array('work_type_id'),
			'onDelete' => self::CASCADE,
			'onUpdate' => self::RESTRICT
		)
	);
	
	/**
	 * An array of parent table information
	 * @var array
	 */
	protected $_dependentTables = array(
		'_files' => 'Application_Model_DbTable_Files',
	);
	
	/**
	 * constructor
	 * @access public
	 * @param array $config
	 * @return void
	 */
    public function __construct($config = array())
    {
      parent::__construct(array());
    }
    
	/**
     * Save or update application data in the database 
     * 
     * @param Application_Model_Applications $application
     * @throws Zend_Exception
     * @return Application_Model_Applications $application
     */
    public function save(Application_Model_Applications $application)
    {
    	//add new school if any was given
    	if (!is_int($application->_school))
    	{
    		$school = new Application_Model_Schools();
    		$school->getSchoolByName($application->_school);
    		if ($school->_school_id == NULL)
    		{
	    		$school->_school_name = $application->_school;
    			$school->save();
    			if ($school->_school_id == null)
    				throw new Zend_Exception('Couldn\'t add new school');
    		}
   			$application->_school = $school->_school_id;
    	}
    	
    	//copy miniature
    	$user = new Application_Model_Users();
    	$user->getUser($application->_user);
    	
    	$options = Zend_Registry::get('options');
    	$extension = Zefir_Filter::getExtension($application->_miniature);
		$dirName = APPLICATION_PATH.'/../public'.$options['upload']['miniatures'].'/';
    	$fileName = $user->getUserUrlName().'.'.$extension;
    	$fileName = $this->_getNewName($dirName , $fileName);
    	$dir = substr($options['upload']['miniatures'], -1) == '/' ? $options['upload']['miniatures'] : $options['upload']['miniatures'].'/';
    	
    	if ($this->_copy($application->_miniature, $dir.$fileName))
    	{
    		$application->_miniature = $fileName;
    	}
    	else
    	{
    		$user->delete();
    		throw new Zend_Exception('Couldn\'t save miniature file');
    	}
    	
    	$id = $application->_application_id;
    	
    	if ($id != null)
    		$row = $this->find($id);
    	
    	else
    	{
    		if ($id != null)
    			throw new Zend_Exception('Incorrect application');
    		else
    			$row = $this->createRow();
    	}
    	
    	$row->edition_id 		= $application->_edition;
    	$row->user_id 			= $application->_user;
    	$row->country			= $application->_country;
    	$row->school_id			= $application->_school;
    	$row->department		= $application->_department;
    	$row->degree_id			= $application->_degree;
    	$row->work_subject		= $application->_work_subject;
    	$row->work_type_id		= $application->_work_type;
    	$row->work_desc			= $application->_work_desc;
    	$row->supervisor		= $application->_supervisor;
    	$row->supervisor_degree	= $application->_supervisor_degree;
    	$row->graduation_time	= $application->_graduation_time;
    	$row->application_date	= $application->_application_date;
    	$row->miniature			= $application->_miniature;
    	$row->active			= $application->_active;
    	
    	if ($row->save())
    	{
    		if (!$id)
    			$application->_application_id = $id = $this->getAdapter()->lastInsertId();
    		
    		//create folder for user's files
    		$uploadDir = APPLICATION_PATH.'/../public'.$options['upload']['applications'].'/';
    		$type = new Application_Model_WorkTypes();
    		$type->getWorkType($application->_work_type);
    		$userDir = strtoupper($application->_country).'_'.$type->_work_type_name.'_'.$user->getUserUrlName();
    		if (!is_dir($uploadDir.'/'.$userDir))
    		{
    			mkdir($uploadDir.'/'.$userDir);
    			chmod($uploadDir.'/'.$userDir, 0777);
    		}	
    		
    		//copy uploaded files
    		$files = array();
    		foreach($application->_files as $key => $uploaded_file)
    		{
    			$fileName = 'file_'.$key.'.'.Zefir_Filter::getExtension($uploaded_file['file']);
		    	if ($this->_copy($uploaded_file['file'], $options['upload']['applications'].'/'.$userDir.'/'.$fileName))
    			{
    				$file = new Application_Model_Files();
    				$file->_path = $userDir.'/'.$fileName;
    				$file->_file_desc = $uploaded_file['description'];
    				$file->_application = $application->_application_id;
    				
    				$file->save();
    				$files[] = $file;
    			}
    			else
    			{
    				//delete new user
    				$user->delete();
    				
    				//delete files and user directory
    				$this->_deleteApplicationFiles($files);
    				unlink($uploadDir.'/'.$userDir);
    				
    				//delete miniature
    				$miniature = APPLICATION_PATH.'/../public'.$options['upload']['miniatures'].'/'.$application->_miniature;
    				unlink($miniature);
    				
    				//delete application entry
    				$application->delete();
    				
    				//throw error
    				throw new Zend_Exception('Couldn\'t copy pictures');
    			}
    		}
    		
    		$application->_files = $files;
    	}
    	else 
    	{
    		//delete new user
    		$user->delete();
    		
    		//delete miniature
			$miniature = APPLICATION_PATH.'/../public'.$options['upload']['miniatures'].'/'.$application->_miniature;
			unlink($miniature);
    		
    		throw new Zend_Exception('Couldn\'t save data');
    	}
    	return $application;
    	
    }
    
    protected function _deleteApplicationFiles($files)
    {
    	$options = Zend_Registry::get('options');
    	foreach($files as $file)
    	{
    		$path = APPLICATION_PATH.'/../public'.$options['upload']['applications'].'/'.$file->_path;
    		unlink($path);
    		$file->delete();
    	}
    }
}

